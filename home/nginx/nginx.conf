# set docker DNS resolver
resolver 127.0.0.11 valid=10s;

server {
    location / {
        set $ops_project_backend '';
        set $ops_project_docroot '';
        set $ops_project_basic_auth off;
        set $ops_project_basic_auth_file '';

        rewrite_by_lua_block {
            function is_file(path)
                return os.execute(('[ -f "%s" ]'):format(path)) or false
            end

            function is_dir(path)
                return os.execute(('[ -d "%s" ]'):format(path)) or false
            end

            function dotenv(path, env)
                local env = {}

                if is_file(path) then
                    for line in io.lines(path) do
                        local key, value = string.match(line, '^([^#][^=]+)=[\'"]?([^\'"]+)')
                        if key then env[key] = value end
                    end
                end

                return env
            end

            local default_project_backend = os.getenv('OPS_DEFAULT_BACKEND')
            local default_project_docroot = os.getenv('OPS_DEFAULT_DOCROOT')

            -- set defaults
            ngx.var.ops_project_backend = os.getenv("OPS_DEFAULT_BACKEND")
            ngx.var.ops_project_docroot = os.getenv("OPS_DEFAULT_DOCROOT")

            local host = ngx.req.get_headers()["Host"]
            local name = host:match("^([^.]+)")

            if name == 'ops' then
                return
            end

            local path = '/var/www/html/' .. name
            local env = dotenv(path .. '/.env')

            -- backend
            if env['OPS_PROJECT_BACKEND'] ~= nil and string.len(env['OPS_PROJECT_BACKEND']) > 0 then
                ngx.var.ops_project_backend = env['OPS_PROJECT_BACKEND']
            end

            -- docroot
            if env['OPS_PROJECT_DOCROOT'] ~= nil then
                ngx.var.ops_project_docroot = env['OPS_PROJECT_DOCROOT']
            end

            -- basic auth
            if env['OPS_PROJECT_BASIC_AUTH'] and env['OPS_PROJECT_BASIC_AUTH'] ~= "" and env['OPS_PROJECT_BASIC_AUTH'] ~= "" then
                ngx.var.ops_project_basic_auth = 'Password Protected Environment'
                ngx.var.ops_project_basic_auth_file = path .. '/.htpasswd'

                if env['OPS_PROJECT_BASIC_AUTH_FILE'] then
                    ngx.var.ops_project_basic_auth_file = path .. '/' .. env['OPS_PROJECT_BASIC_AUTH_FILE']
                end
            end
        }

        auth_basic $ops_project_basic_auth;
        auth_basic_user_file $ops_project_basic_auth_file;

        proxy_pass_request_body on;
        proxy_pass_request_headers on;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Ops-Project-Docroot $ops_project_docroot;
        proxy_set_header X-Ops-Project-Backend $ops_project_backend;
        proxy_pass http://$ops_project_backend$request_uri;
    }
}
